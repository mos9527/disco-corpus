# Auto-generated by https://github.com/mos9527/UnityPyTypetreeCodegen
# Python definition for Sunshine

from .. import *
from .. import ContinueResponseToggle
from ..FortressOccident import CursorType
from .. import EndgameBoatWaypoint
from .. import Entry
from ..FortressOccident import FOComponent
from ..LocalizationCustomSystem import FontTranslationString
from .. import InventoryTabPanel
from .. import LocalizedTooltipDescription
from .. import Location
from .. import LogRenderer
from .. import ScrollDown
from .. import SeagullWaypoint
from .. import SelectionNavigationGroup
from .. import SkillModifierTemplate
from .. import SunshineContinueButton
from .. import Target
from .. import ThoughtSlotActionButton
from ..Sunshine.Metric import ThoughtState
from .. import TimedAreaState
from ..LocalizationCustomSystem import TranslationString
from ..Voidforge import Tween
from .. import TweenRectTransform
from ..Voidforge import TweenShaderProperty
from .. import VerticalStepScrollView
from .. import XPPanel

@UTTCGen
class ThoughtOnList(MonoBehaviour):
	m_Navigation : object # XXX: Fallback of Navigation
	m_Transition : int
	m_Colors : object # XXX: Fallback of ColorBlock
	m_SpriteState : object # XXX: Fallback of SpriteState
	m_AnimationTriggers : object # XXX: Fallback of AnimationTriggers
	m_Interactable : bool
	m_TargetGraphic : PPtr[object] # XXX: Fallback of PPtr<Graphic>
	_text : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	_textLocalize : PPtr[object] # XXX: Fallback of PPtr<Localize>
	_fillingImage : PPtr[Image]
	_backgroundImage : PPtr[Image]
	_leftBlock : PPtr[Image]
	_icon : PPtr[Image]
	_researchProgressText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class AllThoughtsList(MonoBehaviour):
	upSelectable : PPtr[object] # XXX: Fallback of PPtr<Selectable>
	downSelectable : PPtr[object] # XXX: Fallback of PPtr<Selectable>
	leftSelectable : PPtr[object] # XXX: Fallback of PPtr<Selectable>
	rightSelectable : PPtr[object] # XXX: Fallback of PPtr<Selectable>
	_template : PPtr[ThoughtOnList]
	_viewportNavigation : PPtr[SelectionNavigationGroup]
	_contentParent : PPtr[RectTransform]
	_statusSortPriorities : List[ThoughtState]
	sortTypeBackground : PPtr[TweenRectTransform]
	gainedUnknownSeparator : PPtr[Transform]
	unknownForgottenSeparator : PPtr[Transform]
	buttonSortByStatus : PPtr[object] # XXX: Fallback of PPtr<Button>
	imageSortByStatus : PPtr[Image]
	textSortByType : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	buttonSortByDate : PPtr[object] # XXX: Fallback of PPtr<Button>
	imageSortByDate : PPtr[Image]
	textSortByDate : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	buttonSortAZ : PPtr[object] # XXX: Fallback of PPtr<Button>
	imageSortAZ : PPtr[Image]
	textSortAZ : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	verticalStep : PPtr[VerticalStepScrollView]
@UTTCGen
class AnimationStateSwitcher(MonoBehaviour):
	locationName : str
	activePresetNames : List[str]
	animationName : str
@UTTCGen
class AreaManager(MonoBehaviour):
	additivelyLoadedScenes : List[str]
	_hideCursorWhileLoading : bool
	_isOutsideArea : bool
	loadOnStart : bool
	onLoadingComplete : object # XXX: Fallback of UnityEvent
@UTTCGen
class AreaStateConfiguration(MonoBehaviour):
	pass
@UTTCGen
class AreaStatePlaceholder(MonoBehaviour):
	pass
@UTTCGen
class AreaStatePreset(MonoBehaviour):
	pass
@UTTCGen
class AttributeDisplayField(MonoBehaviour):
	ability : int
@UTTCGen
class AudioReverbSettings(MonoBehaviour):
	dryLevel : float
	room : float
	roomHF : float
	roomLF : float
	decayTime : float
	decayHFRatio : float
	reflectionsLevel : float
	reflectionsDelay : float
	reverbLevel : float
	reverbDelay : float
	hfReference : float
	lfReference : float
	diffusion : float
	density : float
	roomRolloff : float
@UTTCGen
class BlendShapeIds(MonoBehaviour):
	items : List[Entry]
@UTTCGen
class BoatRideCutsceneSituation(MonoBehaviour):
	pass
@UTTCGen
class BulletsSlot(MonoBehaviour):
	bulletsSprites : List[Sprite]
@UTTCGen
class BuyOptionTooltip(MonoBehaviour):
	contentLayoutGroup : PPtr[object] # XXX: Fallback of PPtr<HorizontalLayoutGroup>
	canvasGroup : PPtr[CanvasGroup]
	titleText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	effectsText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	portraitImg : PPtr[Image]
@UTTCGen
class CameraMarker(MonoBehaviour):
	setZoom : bool
	zoom : float
	setViewport : bool
	viewport : Vector2f
	isDialogueMarker : bool
	offset : Vector3f
	setDuration : bool
	durations : Vector3f
	restoreZoom : float
	restoreViewportFocus : Vector2f
@UTTCGen
class CameraSettings(MonoBehaviour):
	setZoom : bool
	zoom : float
	setViewport : bool
	viewport : Vector2f
@UTTCGen
class CameraStartFrom(MonoBehaviour):
	setZoom : bool
	zoom : float
	setViewport : bool
	viewport : Vector2f
	worldPosition : Vector3f
	luaCondition : str
	luaInstruction : str
@UTTCGen
class CameraTrackingTagListener(MonoBehaviour):
	pass
@UTTCGen
class VitruvianLayer(MonoBehaviour):
	name : str
@UTTCGen
class CharacterItem(MonoBehaviour):
	itemId : str
	layer : VitruvianLayer
	vitruvianTexture : PPtr[Texture2D]
@UTTCGen
class CheckTooltip(MonoBehaviour):
	titleLayoutGroup : PPtr[object] # XXX: Fallback of PPtr<HorizontalLayoutGroup>
	titleText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	titleProbability : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	resultsBox : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	divider : PPtr[GameObject]
	explainBox : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	explanation : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class CommandLineUtils(MonoBehaviour):
	pass
@UTTCGen
class ConstTooltip(MonoBehaviour):
	pass
@UTTCGen
class Container(MonoBehaviour):
	followMouseCursor : bool
	canvasGroup : PPtr[CanvasGroup]
	moneyAmountPanelTemplate : PPtr[GameObject]
	itemTemplate : PPtr[object] # XXX: Fallback of PPtr<Button>
	takeAllButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	closeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	columns : int
	loadedImagesCounter : int
	gridSpacing : float
	ContainerList : List[PPtr[RectTransform]]
	leftSlot : PPtr[RectTransform]
	rightSlot : PPtr[RectTransform]
@UTTCGen
class ContainerItem(MonoBehaviour):
	name : str
	probability : int
	value : int
	deviation : int
	calculatedValue : int
	bonusLoot : bool
@UTTCGen
class ItemSlot(MonoBehaviour):
	slotItems : List[ContainerItem]
@UTTCGen
class ContainerSource(MonoBehaviour):
	_interactionRadius : float
	outlinesOverride : bool
	conversation : str
	themesong : str
	openedWithCrowbar : bool
	difficulty : int
	skillType : int
	conditionString : str
	slots : List[ItemSlot]
	destroyContainer : bool
	isLocked : bool
@UTTCGen
class ConversationLogger(MonoBehaviour):
	rightStickScrollSpeed : float
	_ShowLog : bool
	logRenderer : PPtr[LogRenderer]
	continueButton : PPtr[SunshineContinueButton]
	interactionToggler : PPtr[ContinueResponseToggle]
	scrollDown : PPtr[ScrollDown]
	portraitImg : PPtr[Image]
	FODialogueUI : PPtr[RectTransform]
	unityUI : PPtr[object] # XXX: Fallback of PPtr<AbstractDialogueUI>
	viewportFocus : Vector2f
	inSequence : bool
	processContinueButtonHotkey : bool
@UTTCGen
class CorpseDream(MonoBehaviour):
	pass
@UTTCGen
class CostOptionTooltip(MonoBehaviour):
	titleGroup : PPtr[object] # XXX: Fallback of PPtr<HorizontalLayoutGroup>
	costLabel : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	cost : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	contentPanelGroup : PPtr[object] # XXX: Fallback of PPtr<HorizontalLayoutGroup>
	leftSide : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	rightSide : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	explanation : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class Credits(MonoBehaviour):
	closeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	idleState : PPtr[object] # XXX: Fallback of PPtr<PlayableAsset>
	showState : PPtr[object] # XXX: Fallback of PPtr<PlayableAsset>
@UTTCGen
class CustomInputModule(MonoBehaviour):
	m_HorizontalAxis : str
	m_VerticalAxis : str
	m_SubmitButton : str
	m_CancelButton : str
	m_InputActionsPerSecond : float
	m_RepeatDelay : float
	m_ForceModuleActive : bool
@UTTCGen
class CutsceneSituation(MonoBehaviour):
	pass
@UTTCGen
class DeactivatableObject(MonoBehaviour):
	pass
@UTTCGen
class DebugController(MonoBehaviour):
	pass
@UTTCGen
class DebugControllerTest(MonoBehaviour):
	pass
@UTTCGen
class DebugMode(MonoBehaviour):
	value__ : int
@UTTCGen
class DebugModes(MonoBehaviour):
	demoModeAlwaysUnlocked : bool
	conventionModeAlwaysUnlocked : bool
@UTTCGen
class DeveloperPlaceholder(MonoBehaviour):
	pass
@UTTCGen
class DialogManager_1(MonoBehaviour):
	rootObject : PPtr[RectTransform]
	lockCamera : bool
@UTTCGen
class DreamFive(MonoBehaviour):
	pass
@UTTCGen
class DreamFour(MonoBehaviour):
	pass
@UTTCGen
class DreamThree(MonoBehaviour):
	pass
@UTTCGen
class EnablingStateSwitcher(MonoBehaviour):
	locationName : str
	activePresetNames : List[str]
@UTTCGen
class EnddayManager(MonoBehaviour):
	pass
@UTTCGen
class EndgameBoat(MonoBehaviour):
	targetWaypoint : PPtr[EndgameBoatWaypoint]
	speed : float
	turnSpeed : float
	boombox : PPtr[GameObject]
	partyParent : PPtr[Transform]
@UTTCGen
class EndgameManager(MonoBehaviour):
	pass
@UTTCGen
class EndgameType(MonoBehaviour):
	value__ : int
@UTTCGen
class FloatResizer(MonoBehaviour):
	pass
@UTTCGen
class FoBarkUI(MonoBehaviour):
	barkOffset : Vector3f
@UTTCGen
class StateSwitcher(MonoBehaviour):
	locationName : str
	activePresetNames : List[str]
@UTTCGen
class Location(MonoBehaviour):
	name : str
	validStates : List[str]
	defaultState : int
	currentState : int
	stateSwitchers : List[PPtr[StateSwitcher]]
@UTTCGen
class Formation(MonoBehaviour):
	_type : int
	_locations : List[Location]
@UTTCGen
class FormationMarker(MonoBehaviour):
	_purpose : int
	_formation : Formation
	_ignoreTransformRotation : bool
@UTTCGen
class GameController(MonoBehaviour):
	movementCursor : PPtr[CursorType]
	noActionCursor : PPtr[CursorType]
	hideCursor : PPtr[CursorType]
	destinationMarker : PPtr[GameObject]
	destinationMarkerAlpha : PPtr[TweenShaderProperty]
	destinationMarkerAnimator : PPtr[Animator]
	minMouseHoldDistance : float
	isTeleporting : bool
	cursorHidden : bool
	isNarrowEnvironment : bool
	_destinationMarkerTween : PPtr[Tween]
	EnvironmentTriggerActive : bool
	currentMovementMode : int
@UTTCGen
class GameMenuManager(MonoBehaviour):
	pass
@UTTCGen
class GenericDream(MonoBehaviour):
	pass
@UTTCGen
class GenericTooltip(MonoBehaviour):
	Title : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	Description : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	NumericInfo : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class HoverTooltip(MonoBehaviour):
	titleText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	properties : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	description : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class ICameraBackPosition(MonoBehaviour):
	pass
@UTTCGen
class IgnoreCameraLock(MonoBehaviour):
	pass
@UTTCGen
class Inventory(MonoBehaviour):
	pass
@UTTCGen
class InventoryTutorial(MonoBehaviour):
	text : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	background : PPtr[Image]
	openButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	closeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
@UTTCGen
class InventoryTooltip(MonoBehaviour):
	descriptionScrollbar : PPtr[object] # XXX: Fallback of PPtr<Scrollbar>
	bigItemImage : PPtr[Image]
	bigItemImageGlow : PPtr[Image]
	bigItemImageGhostFrame : PPtr[Image]
	inventoryTutorial : PPtr[InventoryTutorial]
	titlePanel : PPtr[GameObject]
	title : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	subtitle : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	description : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	properties : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	price : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	introductionShown : bool
	pawnshopPanel : PPtr[GameObject]
	interactButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	interactButtonText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	closeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	additionalInteractButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	additionalInteractButtonText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class ITextSource(MonoBehaviour):
	pass
@UTTCGen
class IVitruvianHandler(MonoBehaviour):
	pass
@UTTCGen
class JsonUtil(MonoBehaviour):
	pass
@UTTCGen
class KeysSlot(MonoBehaviour):
	pass
@UTTCGen
class KimAngryAtChurch(MonoBehaviour):
	pass
@UTTCGen
class KimDebrief(MonoBehaviour):
	pass
@UTTCGen
class LedgerDream(MonoBehaviour):
	pass
@UTTCGen
class Lifeline(MonoBehaviour):
	pass
@UTTCGen
class LoadScreenOverride(MonoBehaviour):
	defaultLoadScreens : List[Texture]
	blackScreen : PPtr[Sprite]
	loadingSavePanelImage : PPtr[object] # XXX: Fallback of PPtr<RawImage>
@UTTCGen
class LogicalEntity(MonoBehaviour):
	technicalName : str
	scene : Scene
@UTTCGen
class MaterialStateSwitcher(MonoBehaviour):
	locationName : str
	activePresetNames : List[str]
	MaterialsForStates : List[Material]
@UTTCGen
class ModifiersSection(MonoBehaviour):
	abilityType : int
	colorCodeRect : PPtr[RectTransform]
	colorCodeRectRTL : PPtr[RectTransform]
	modifiersParent : PPtr[Transform]
	templateSkillModifier : PPtr[SkillModifierTemplate]
@UTTCGen
class MoneyItem(MonoBehaviour):
	_interactionRadius : float
	outlinesOverride : bool
	conversation : str
	themesong : str
	amount : int
@UTTCGen
class MovementCommand(MonoBehaviour):
	pass
@UTTCGen
class MovementMode(MonoBehaviour):
	value__ : int
@UTTCGen
class NavMeshPositionParameter(MonoBehaviour):
	pass
@UTTCGen
class Newspaper(MonoBehaviour):
	title : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	titleLocalize : PPtr[object] # XXX: Fallback of PPtr<Localize>
	opener : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	openerLocalize : PPtr[object] # XXX: Fallback of PPtr<Localize>
	pageNr : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	forward : PPtr[object] # XXX: Fallback of PPtr<Button>
	back : PPtr[object] # XXX: Fallback of PPtr<Button>
@UTTCGen
class NoDream(MonoBehaviour):
	pass
@UTTCGen
class OrbResizer(MonoBehaviour):
	pass
@UTTCGen
class ParagraphText(MonoBehaviour):
	paragraphText : str
	firstLine : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	firstLineLocalizeFont : PPtr[object] # XXX: Fallback of PPtr<Localize>
	firstLineLocalizeMaterial : PPtr[object] # XXX: Fallback of PPtr<Localize>
	moreLines : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	moreLinesLocalizeFont : PPtr[object] # XXX: Fallback of PPtr<Localize>
	moreLinesLocalizeMaterial : PPtr[object] # XXX: Fallback of PPtr<Localize>
	paragraphOffset : float
	indented : bool
	layoutElement : PPtr[object] # XXX: Fallback of PPtr<LayoutElement>
@UTTCGen
class ParentedCharacterItem(MonoBehaviour):
	itemId : str
	layer : VitruvianLayer
	vitruvianTexture : PPtr[Texture2D]
	mountObjectId : str
	mountPosition : Vector3f
	mountRotation : object # XXX: Fallback of Quaternion
@UTTCGen
class PleasureWheelSwitcher(MonoBehaviour):
	locationName : str
	activePresetNames : List[str]
	fadeTime : float
@UTTCGen
class PositionStateLocation(MonoBehaviour):
	areaName : str
	activeStates : List[str]
@UTTCGen
class PositionStateSwitcher(MonoBehaviour):
	locationName : str
	activePresetNames : List[str]
@UTTCGen
class PostTribunalCutsceneSituation(MonoBehaviour):
	pass
@UTTCGen
class ResponseText(MonoBehaviour):
	textField : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	numberField : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class SeaFortDream(MonoBehaviour):
	pass
@UTTCGen
class SeaFortNoDream(MonoBehaviour):
	pass
@UTTCGen
class SeaFortStartDay(MonoBehaviour):
	pass
@UTTCGen
class Seagull(MonoBehaviour):
	targetWaypoint : PPtr[SeagullWaypoint]
	speed : float
	turnSpeed : float
@UTTCGen
class Sector(MonoBehaviour):
	value__ : int
@UTTCGen
class ShackStartDay(MonoBehaviour):
	pass
@UTTCGen
class SkinnedCharacterItem(MonoBehaviour):
	itemId : str
	layer : VitruvianLayer
	vitruvianTexture : PPtr[Texture2D]
	blendshapeModifiers : List[str]
@UTTCGen
class StatDisplay(MonoBehaviour):
	intModifiersSection : PPtr[ModifiersSection]
	psyModifiersSection : PPtr[ModifiersSection]
	fysModifiersSection : PPtr[ModifiersSection]
	motModifiersSection : PPtr[ModifiersSection]
@UTTCGen
class StateTransformPair(MonoBehaviour):
	stateName : str
	transform : PPtr[Transform]
@UTTCGen
class StreamersCap(MonoBehaviour):
	WorkInEditor : bool
@UTTCGen
class TeleportBackCutscene(MonoBehaviour):
	pass
@UTTCGen
class TeleportToAreaCutscene(MonoBehaviour):
	pass
@UTTCGen
class TextUpdater(MonoBehaviour):
	textObject : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	textSource : PPtr[FOComponent]
@UTTCGen
class ThoughtCabinetBackground(MonoBehaviour):
	backgroundImage : PPtr[Image]
	dimStartX : float
	dimEndX : float
	animationTime : float
@UTTCGen
class ThoughtInteractButton(MonoBehaviour):
	button : PPtr[object] # XXX: Fallback of PPtr<Button>
	internalizeSound : str
	cancelSound : str
	internalizeGroup : str
	cancelGroup : str
@UTTCGen
class TooltipSource(MonoBehaviour):
	tooltipDelay : float
	tooltipType : int
@UTTCGen
class ThoughtCabinetTooltip(MonoBehaviour):
	descriptionScrollbar : PPtr[object] # XXX: Fallback of PPtr<Scrollbar>
	mainImage : PPtr[Image]
	mainImageSecondary : PPtr[Image]
	titleUp : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	title : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	properties : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	propertiesHolder : PPtr[GameObject]
	finishedThoughtEffect : PPtr[GameObject]
	description : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	controllerButtonPrompts : PPtr[GameObject]
	buttonLocalizedTooltipContent : PPtr[LocalizedTooltipDescription]
	buttonTooltipSource : PPtr[TooltipSource]
	buttonThought : PPtr[ThoughtInteractButton]
	interactButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	unlockButtonTerm : TranslationString
	grayUnlockButtonTerm : TranslationString
	cancelButtonTerm : TranslationString
	forgetButtonTerm : TranslationString
	grayForgetButtonTerm : TranslationString
	internalizeButtonTerm : TranslationString
	grayInternalizeButtonTerm : TranslationString
	tabsParent : PPtr[GameObject]
	tweenBackground : PPtr[TweenRectTransform]
	problemButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	problemText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	solutionButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	solutionText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	problemSolutionSlash : PPtr[GameObject]
	xpPanel : PPtr[XPPanel]
	pathToThoughtsImages : str
	fullPathToThoughtTreeImage : str
@UTTCGen
class ThoughtConstants(MonoBehaviour):
	pass
@UTTCGen
class ThoughtSlotStateObject(MonoBehaviour):
	slotType : int
	sl_OnMouseover : bool
	sl_Selected : bool
	sl_NoMouseoverNoSelected : bool
	halo_Selected : PPtr[Sprite]
	halo_Mouseover : PPtr[Sprite]
	halo_NoMouseoverNoSelected : PPtr[Sprite]
	halo_MouseoverOverridesSelected : bool
@UTTCGen
class ThoughtSlotStateManager(MonoBehaviour):
	_configurations : List[ThoughtSlotStateObject]
	_defaultConfiguration : PPtr[ThoughtSlotStateObject]
@UTTCGen
class ThoughtSlot(MonoBehaviour):
	m_Navigation : object # XXX: Fallback of Navigation
	m_Transition : int
	m_Colors : object # XXX: Fallback of ColorBlock
	m_SpriteState : object # XXX: Fallback of SpriteState
	m_AnimationTriggers : object # XXX: Fallback of AnimationTriggers
	m_Interactable : bool
	m_TargetGraphic : PPtr[object] # XXX: Fallback of PPtr<Graphic>
	HasButton : bool
	UnlockButton : PPtr[GameObject]
	interactButtonUnlock : PPtr[object] # XXX: Fallback of PPtr<Button>
	interactButtonThought : PPtr[ThoughtInteractButton]
	PlaceForUnlockButton : PPtr[Transform]
	_anim : PPtr[Animation]
	_actionButton : PPtr[ThoughtSlotActionButton]
	_slotImage : PPtr[Image]
	_doubleFrame : PPtr[Image]
	_thoughtProjectImage : PPtr[Image]
	_fillableArea : PPtr[Image]
	_fillableAreaBackground : PPtr[Image]
	_thoughtNameText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	_unlockSlotStarPip : PPtr[Image]
@UTTCGen
class ThoughtSlotsTree(MonoBehaviour):
	rightSelectable : PPtr[object] # XXX: Fallback of PPtr<Selectable>
	leftSelectable : PPtr[object] # XXX: Fallback of PPtr<Selectable>
	slotPrefab : PPtr[ThoughtSlot]
	slots : List[ThoughtSlot]
	columns : List[PPtr[RectTransform]]
@UTTCGen
class ThoughtManager(MonoBehaviour):
	isDebugOn : bool
	slotsBought : int
	thoughtSlotStateManager : PPtr[ThoughtSlotStateManager]
	_slotsTree : PPtr[ThoughtSlotsTree]
	_thoughtList : PPtr[AllThoughtsList]
	_viewTitle : TranslationString
	_viewDescription : TranslationString
	_emptySlotDescription : TranslationString
	_unlockableSlotDescription : TranslationString
	_emptySlotImage : PPtr[Sprite]
	_unlockableSlotImage : PPtr[Sprite]
	_updatedIcon : PPtr[Sprite]
	_lockedIcon : PPtr[Sprite]
	fontNormalTerm : FontTranslationString
	fontBoldTerm : FontTranslationString
	_colorTextForgotten : ColorRGBA
	_colorTextUnknown : ColorRGBA
	_colorTextKnown : ColorRGBA
	_colorTextCooking : ColorRGBA
	_colorTextSelected : ColorRGBA
	_colorTextTabSelected : ColorRGBA
	_colorTextTabDeselected : ColorRGBA
	_colorTextGreyed : ColorRGBA
	_colorTextProblem : ColorRGBA
	_colorTextSolution : ColorRGBA
	_colorTextProperties : ColorRGBA
	_colorTextPropertiesSolved : ColorRGBA
	_colorBackgroundCooking : ColorRGBA
	_colorBackgroundFixed : ColorRGBA
	_colorBackgroundSelected : ColorRGBA
	_colorResearchFillingImage : ColorRGBA
	_colorLeftBlockSelected : ColorRGBA
	_colorLeftBlockDeselected : ColorRGBA
	_colorLeftIconSelected : ColorRGBA
	_colorLeftIconDeselected : ColorRGBA
	_costForgetThought : int
	_costUnlockSlot : List[int]
@UTTCGen
class ThoughtSlotR(MonoBehaviour):
	pass
@UTTCGen
class ThoughtsSortType(MonoBehaviour):
	value__ : int
@UTTCGen
class ThoughtTree(MonoBehaviour):
	pass
@UTTCGen
class TimedStateSwitcher(MonoBehaviour):
	State : TimedAreaState
@UTTCGen
class Tooltip_1(MonoBehaviour):
	pass
@UTTCGen
class TweenAudioReverbSettings(MonoBehaviour):
	description : str
	target : Target
	playOnStart : bool
	delayStart : float
	delayFinish : float
	playSpeed : float
	updateType : int
	ignoreTimeScale : bool
	onFinish : object # XXX: Fallback of UnityEvent
	targetPreset : int
	targetSettings : PPtr[AudioReverbSettings]
	duration : float
@UTTCGen
class TweenCamera(MonoBehaviour):
	description : str
	target : Target
	playOnStart : bool
	delayStart : float
	delayFinish : float
	playSpeed : float
	updateType : int
	ignoreTimeScale : bool
	onFinish : object # XXX: Fallback of UnityEvent
	duration : float
	easingFactor : float
	focus : Vector3f
	zoom : float
	viewportFocus : Vector2f
@UTTCGen
class TweenDelay(MonoBehaviour):
	description : str
	target : Target
	playOnStart : bool
	delayStart : float
	delayFinish : float
	playSpeed : float
	updateType : int
	ignoreTimeScale : bool
	onFinish : object # XXX: Fallback of UnityEvent
	duration : float
@UTTCGen
class TweenLuaConditionalDeactivate(MonoBehaviour):
	description : str
	target : Target
	playOnStart : bool
	delayStart : float
	delayFinish : float
	playSpeed : float
	updateType : int
	ignoreTimeScale : bool
	onFinish : object # XXX: Fallback of UnityEvent
	destroyGameObject : bool
	variable : str
@UTTCGen
class TweenMasterAudioPlaylistVolume(MonoBehaviour):
	description : str
	target : Target
	playOnStart : bool
	delayStart : float
	delayFinish : float
	playSpeed : float
	updateType : int
	ignoreTimeScale : bool
	onFinish : object # XXX: Fallback of UnityEvent
@UTTCGen
class UIDraggable(MonoBehaviour):
	itemImage : PPtr[Image]
	glowImage : PPtr[Image]
@UTTCGen
class Util(MonoBehaviour):
	pass
@UTTCGen
class VitruvianManager(MonoBehaviour):
	textureSize : int
	layers : List[str]
@UTTCGen
class WhirlingStartDay(MonoBehaviour):
	pass
