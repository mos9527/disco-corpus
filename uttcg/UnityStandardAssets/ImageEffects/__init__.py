# Auto-generated by https://github.com/mos9527/UnityPyTypetreeCodegen
# Python definition for UnityStandardAssets.ImageEffects

from ... import *

@UTTCGen
class AAMode(MonoBehaviour):
	value__ : int
@UTTCGen
class Antialiasing(MonoBehaviour):
	mode : int
	showGeneratedNormals : bool
	offsetScale : float
	blurRadius : float
	edgeThresholdMin : float
	edgeThreshold : float
	edgeSharpness : float
	dlaaSharp : bool
	ssaaShader : PPtr[Shader]
	dlaaShader : PPtr[Shader]
	nfaaShader : PPtr[Shader]
	shaderFXAAPreset2 : PPtr[Shader]
	shaderFXAAPreset3 : PPtr[Shader]
	shaderFXAAII : PPtr[Shader]
	shaderFXAAIII : PPtr[Shader]
@UTTCGen
class Bloom(MonoBehaviour):
	tweakMode : int
	screenBlendMode : int
	hdr : int
	sepBlurSpread : float
	quality : int
	bloomIntensity : float
	bloomThreshold : float
	bloomThresholdColor : ColorRGBA
	bloomBlurIterations : int
	hollywoodFlareBlurIterations : int
	flareRotation : float
	lensflareMode : int
	hollyStretchWidth : float
	lensflareIntensity : float
	lensflareThreshold : float
	lensFlareSaturation : float
	flareColorA : ColorRGBA
	flareColorB : ColorRGBA
	flareColorC : ColorRGBA
	flareColorD : ColorRGBA
	lensFlareVignetteMask : PPtr[Texture2D]
	lensFlareShader : PPtr[Shader]
	screenBlendShader : PPtr[Shader]
	blurAndFlaresShader : PPtr[Shader]
	brightPassFilterShader : PPtr[Shader]
@UTTCGen
class BloomAndFlares(MonoBehaviour):
	tweakMode : int
	screenBlendMode : int
	hdr : int
	sepBlurSpread : float
	useSrcAlphaAsMask : float
	bloomIntensity : float
	bloomThreshold : float
	bloomBlurIterations : int
	lensflares : bool
	hollywoodFlareBlurIterations : int
	lensflareMode : int
	hollyStretchWidth : float
	lensflareIntensity : float
	lensflareThreshold : float
	flareColorA : ColorRGBA
	flareColorB : ColorRGBA
	flareColorC : ColorRGBA
	flareColorD : ColorRGBA
	lensFlareVignetteMask : PPtr[Texture2D]
	lensFlareShader : PPtr[Shader]
	vignetteShader : PPtr[Shader]
	separableBlurShader : PPtr[Shader]
	addBrightStuffOneOneShader : PPtr[Shader]
	screenBlendShader : PPtr[Shader]
	hollywoodFlaresShader : PPtr[Shader]
	brightPassFilterShader : PPtr[Shader]
@UTTCGen
class BloomOptimized(MonoBehaviour):
	threshold : float
	intensity : float
	blurSize : float
	blurIterations : int
	blurType : int
	fastBloomShader : PPtr[Shader]
@UTTCGen
class BloomScreenBlendMode(MonoBehaviour):
	value__ : int
@UTTCGen
class Blur(MonoBehaviour):
	iterations : int
	blurSpread : float
	blurShader : PPtr[Shader]
@UTTCGen
class BlurOptimized(MonoBehaviour):
	downsample : int
	blurSize : float
	blurIterations : int
	blurType : int
	blurShader : PPtr[Shader]
@UTTCGen
class CameraMotionBlur(MonoBehaviour):
	filterType : int
	preview : bool
	previewScale : Vector3f
	movementScale : float
	rotationScale : float
	maxVelocity : float
	minVelocity : float
	velocityScale : float
	softZDistance : float
	velocityDownsample : int
	excludeLayers : object # XXX: Fallback of LayerMask
	shader : PPtr[Shader]
	dx11MotionBlurShader : PPtr[Shader]
	replacementClear : PPtr[Shader]
	noiseTexture : PPtr[Texture2D]
	jitter : float
	showVelocity : bool
	showVelocityScale : float
@UTTCGen
class ColorCorrectionCurves(MonoBehaviour):
	useDepthCorrection : bool
	saturation : float
	selectiveCc : bool
	selectiveFromColor : ColorRGBA
	selectiveToColor : ColorRGBA
	mode : int
	updateTextures : bool
	colorCorrectionCurvesShader : PPtr[Shader]
	simpleColorCorrectionCurvesShader : PPtr[Shader]
	colorCorrectionSelectiveShader : PPtr[Shader]
@UTTCGen
class ColorCorrectionLookup(MonoBehaviour):
	shader : PPtr[Shader]
	converted3DLut : PPtr[Texture3D]
	basedOnTempTex : str
@UTTCGen
class ColorCorrectionRamp(MonoBehaviour):
	shader : PPtr[Shader]
	textureRamp : PPtr[Texture]
@UTTCGen
class ContrastEnhance(MonoBehaviour):
	intensity : float
	threshold : float
	blurSpread : float
	separableBlurShader : PPtr[Shader]
	contrastCompositeShader : PPtr[Shader]
@UTTCGen
class ContrastStretch(MonoBehaviour):
	adaptationSpeed : float
	limitMinimum : float
	limitMaximum : float
	shaderLum : PPtr[Shader]
	shaderReduce : PPtr[Shader]
	shaderAdapt : PPtr[Shader]
	shaderApply : PPtr[Shader]
@UTTCGen
class CreaseShading(MonoBehaviour):
	intensity : float
	softness : int
	spread : float
	blurShader : PPtr[Shader]
	depthFetchShader : PPtr[Shader]
	creaseApplyShader : PPtr[Shader]
@UTTCGen
class DepthOfField(MonoBehaviour):
	visualizeFocus : bool
	focalLength : float
	focalSize : float
	aperture : float
	focalTransform : PPtr[Transform]
	maxBlurSize : float
	highResolution : bool
	blurType : int
	blurSampleCount : int
	nearBlur : bool
	foregroundOverlap : float
	dofHdrShader : PPtr[Shader]
	dx11BokehShader : PPtr[Shader]
	dx11BokehThreshold : float
	dx11SpawnHeuristic : float
	dx11BokehTexture : PPtr[Texture2D]
	dx11BokehScale : float
	dx11BokehIntensity : float
@UTTCGen
class DepthOfFieldDeprecated(MonoBehaviour):
	quality : int
	resolution : int
	simpleTweakMode : bool
	focalPoint : float
	smoothness : float
	focalZDistance : float
	focalZStartCurve : float
	focalZEndCurve : float
	objectFocus : PPtr[Transform]
	focalSize : float
	bluriness : int
	maxBlurSpread : float
	foregroundBlurExtrude : float
	dofBlurShader : PPtr[Shader]
	dofShader : PPtr[Shader]
	visualize : bool
	bokehDestination : int
	bokeh : bool
	bokehSupport : bool
	bokehShader : PPtr[Shader]
	bokehTexture : PPtr[Texture2D]
	bokehScale : float
	bokehIntensity : float
	bokehThresholdContrast : float
	bokehThresholdLuminance : float
	bokehDownsample : int
@UTTCGen
class EdgeDetection(MonoBehaviour):
	mode : int
	sensitivityDepth : float
	sensitivityNormals : float
	lumThreshold : float
	edgeExp : float
	sampleDist : float
	edgesOnly : float
	edgesOnlyBgColor : ColorRGBA
	edgeDetectShader : PPtr[Shader]
@UTTCGen
class Fisheye(MonoBehaviour):
	strengthX : float
	strengthY : float
	fishEyeShader : PPtr[Shader]
@UTTCGen
class GlobalFog(MonoBehaviour):
	distanceFog : bool
	useRadialDistance : bool
	heightFog : bool
	height : float
	heightDensity : float
	startDistance : float
	fogShader : PPtr[Shader]
@UTTCGen
class Grayscale(MonoBehaviour):
	shader : PPtr[Shader]
	textureRamp : PPtr[Texture]
	rampOffset : float
@UTTCGen
class HDRBloomMode(MonoBehaviour):
	value__ : int
@UTTCGen
class ImageEffectBase(MonoBehaviour):
	shader : PPtr[Shader]
@UTTCGen
class ImageEffects(MonoBehaviour):
	pass
@UTTCGen
class LensflareStyle34(MonoBehaviour):
	value__ : int
@UTTCGen
class MotionBlur(MonoBehaviour):
	shader : PPtr[Shader]
	blurAmount : float
	extraBlur : bool
@UTTCGen
class NoiseAndGrain(MonoBehaviour):
	intensityMultiplier : float
	generalIntensity : float
	blackIntensity : float
	whiteIntensity : float
	midGrey : float
	dx11Grain : bool
	softness : float
	monochrome : bool
	intensities : Vector3f
	tiling : Vector3f
	monochromeTiling : float
	filterMode : int
	noiseTexture : PPtr[Texture2D]
	noiseShader : PPtr[Shader]
	dx11NoiseShader : PPtr[Shader]
@UTTCGen
class NoiseAndScratches(MonoBehaviour):
	monochrome : bool
	grainIntensityMin : float
	grainIntensityMax : float
	grainSize : float
	scratchIntensityMin : float
	scratchIntensityMax : float
	scratchFPS : float
	scratchJitter : float
	grainTexture : PPtr[Texture]
	scratchTexture : PPtr[Texture]
	shaderRGB : PPtr[Shader]
	shaderYUV : PPtr[Shader]
@UTTCGen
class PostEffectsBase(MonoBehaviour):
	pass
@UTTCGen
class PostEffectsHelper(MonoBehaviour):
	pass
@UTTCGen
class Quads(MonoBehaviour):
	pass
@UTTCGen
class ScreenOverlay(MonoBehaviour):
	blendMode : int
	intensity : float
	texture : PPtr[Texture2D]
	overlayShader : PPtr[Shader]
@UTTCGen
class ScreenSpaceAmbientObscurance(MonoBehaviour):
	intensity : float
	radius : float
	blurIterations : int
	blurFilterDistance : float
	downsample : int
	rand : PPtr[Texture2D]
	aoShader : PPtr[Shader]
@UTTCGen
class ScreenSpaceAmbientOcclusion(MonoBehaviour):
	m_Radius : float
	m_SampleCount : int
	m_OcclusionIntensity : float
	m_Blur : int
	m_Downsampling : int
	m_OcclusionAttenuation : float
	m_MinZ : float
	m_SSAOShader : PPtr[Shader]
	m_RandomTexture : PPtr[Texture2D]
@UTTCGen
class SepiaTone(MonoBehaviour):
	shader : PPtr[Shader]
@UTTCGen
class SunShafts(MonoBehaviour):
	resolution : int
	screenBlendMode : int
	sunTransform : PPtr[Transform]
	radialBlurIterations : int
	sunColor : ColorRGBA
	sunThreshold : ColorRGBA
	sunShaftBlurRadius : float
	sunShaftIntensity : float
	maxRadius : float
	useDepthTexture : bool
	sunShaftsShader : PPtr[Shader]
	simpleClearShader : PPtr[Shader]
@UTTCGen
class TiltShift(MonoBehaviour):
	mode : int
	quality : int
	blurArea : float
	maxBlurSize : float
	downsample : int
	tiltShiftShader : PPtr[Shader]
@UTTCGen
class Tonemapping(MonoBehaviour):
	type : int
	adaptiveTextureSize : int
	exposureAdjustment : float
	middleGrey : float
	white : float
	adaptionSpeed : float
	tonemapper : PPtr[Shader]
	validRenderTextureFormat : bool
@UTTCGen
class Triangles(MonoBehaviour):
	pass
@UTTCGen
class TweakMode34(MonoBehaviour):
	value__ : int
@UTTCGen
class Twirl(MonoBehaviour):
	shader : PPtr[Shader]
	radius : Vector2f
	angle : float
	center : Vector2f
@UTTCGen
class VignetteAndChromaticAberration(MonoBehaviour):
	mode : int
	intensity : float
	chromaticAberration : float
	axialAberration : float
	blur : float
	blurSpread : float
	luminanceDependency : float
	blurDistance : float
	vignetteShader : PPtr[Shader]
	separableBlurShader : PPtr[Shader]
	chromAberrationShader : PPtr[Shader]
@UTTCGen
class Vortex(MonoBehaviour):
	shader : PPtr[Shader]
	radius : Vector2f
	angle : float
	center : Vector2f
