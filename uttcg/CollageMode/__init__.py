# Auto-generated by https://github.com/mos9527/UnityPyTypetreeCodegen
# Python definition for CollageMode

from .. import *
from .. import AbstractScheduleManager
from .. import Camera
from .. import ChangeColorData
from .. import DrawerTogglePair
from .. import FadeController
from .. import FullScreenImage
from .. import HiddenImages
from .. import Map
from .. import OperationsSetElement
from .. import Padding
from .. import SavesSubdrawer
from .. import SceneProperties
from .. import ScrollViewOptimizer

@UTTCGen
class ActivateOnHover(MonoBehaviour):
	activatedObject : PPtr[GameObject]
@UTTCGen
class AddDialogueEntryCommand(MonoBehaviour):
	pass
@UTTCGen
class BaseOperationsSet(MonoBehaviour):
	pass
@UTTCGen
class CollageDialogueAutofillEntry(MonoBehaviour):
	portraitImage : PPtr[Image]
	characterNameText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	button : PPtr[object] # XXX: Fallback of PPtr<Button>
	selection : List[GameObject]
@UTTCGen
class CollageDialogueAutofill(MonoBehaviour):
	autofillEntryPrefab : PPtr[CollageDialogueAutofillEntry]
	entriesParent : PPtr[Transform]
	scrollRect : PPtr[object] # XXX: Fallback of PPtr<ScrollRect>
	favouriteSeparator : PPtr[Transform]
	gamepadScrollSpeed : float
@UTTCGen
class CollageDialogueEntry(MonoBehaviour):
	selection : PPtr[GameObject]
@UTTCGen
class BaseCollageDialogueEntriesContainer(MonoBehaviour):
	autofillOperationSet : PPtr[BaseOperationsSet]
	dialogueEntryPrefab : PPtr[CollageDialogueEntry]
	autofill : PPtr[CollageDialogueAutofill]
@UTTCGen
class BaseOperationButton(MonoBehaviour):
	highlight : PPtr[Image]
	selection : PPtr[Image]
@UTTCGen
class DragEventTrigger(MonoBehaviour):
	pass
@UTTCGen
class OperationsPanel(MonoBehaviour):
	operationButtonPrefab : PPtr[BaseOperationButton]
	buttonsParent : PPtr[Transform]
	unusedButtonsParent : PPtr[Transform]
	scrollRect : PPtr[object] # XXX: Fallback of PPtr<ScrollRect>
	favouriteParent : PPtr[Transform]
	scrollViewOptimizer : PPtr[ScrollViewOptimizer]
	selectionAllowed : bool
	executeOnDrag : bool
	executeOnClick : bool
	previewOnClick : bool
	enableShortcutSelection : bool
	dragEventTriggers : List[DragEventTrigger]
	gamepadScrollSpeed : float
	additionalOperationButtons : List[PPtr[BaseOperationButton]]
@UTTCGen
class ExtendedButton(MonoBehaviour):
	m_Navigation : object # XXX: Fallback of Navigation
	m_Transition : int
	m_Colors : object # XXX: Fallback of ColorBlock
	m_SpriteState : object # XXX: Fallback of SpriteState
	m_AnimationTriggers : object # XXX: Fallback of AnimationTriggers
	m_Interactable : bool
	m_TargetGraphic : PPtr[object] # XXX: Fallback of PPtr<Graphic>
	m_OnClick : object # XXX: Fallback of ButtonClickedEvent
	repeat : bool
@UTTCGen
class OperationsPanelScrollButtons(MonoBehaviour):
	_ScrollBeginningButton_k__BackingField : PPtr[ExtendedButton]
	_ScrollPreviousButton_k__BackingField : PPtr[ExtendedButton]
	_ScrollNextButton_k__BackingField : PPtr[ExtendedButton]
	_ScrollEndButton_k__BackingField : PPtr[ExtendedButton]
@UTTCGen
class OperationPanelSubDrawer(MonoBehaviour):
	operationsSet : PPtr[BaseOperationsSet]
	operationsPanel : PPtr[OperationsPanel]
	executeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	scrollButtons : PPtr[OperationsPanelScrollButtons]
@UTTCGen
class CharacterEditDrawer(MonoBehaviour):
	tweenTime : float
	tweenDelay : float
	doneButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	subDrawer : PPtr[OperationPanelSubDrawer]
@UTTCGen
class Drawer(MonoBehaviour):
	tweenTime : float
	tweenDelay : float
@UTTCGen
class DestructiveButtonHoldHandler(MonoBehaviour):
	timeIndicator : PPtr[Image]
	button : PPtr[object] # XXX: Fallback of PPtr<Button>
	holdTime : float
	holdOnMouse : bool
	holdOnGamepad : bool
	gamepadInputType : int
	onStarted : object # XXX: Fallback of UnityEvent
	onPerformed : object # XXX: Fallback of UnityEvent
@UTTCGen
class ElementSelectedDrawer(MonoBehaviour):
	tweenTime : float
	tweenDelay : float
	removeHoldHandler : PPtr[DestructiveButtonHoldHandler]
	editButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	editTextButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	resetButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	doneButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	rotateTooltip : PPtr[GameObject]
@UTTCGen
class Highlighter(MonoBehaviour):
	changeColor : List[ChangeColorData]
	gameObjectsToEnable : List[GameObject]
	setNotHighlightedColor : bool
@UTTCGen
class BottomPanel(MonoBehaviour):
	feldStrip : PPtr[RectTransform]
	titleLocalize : PPtr[object] # XXX: Fallback of PPtr<Localize>
	hiddenPositionY : float
	smallPositionY : float
	bigPositionY : float
	tweenTime : float
	tweenDelay : float
	objectsDrawerTogglePair : DrawerTogglePair
	effectsDrawerTogglePair : DrawerTogglePair
	settingDrawerTogglePair : DrawerTogglePair
	savesDrawerTogglePair : DrawerTogglePair
	elementSelectedDrawer : PPtr[ElementSelectedDrawer]
	characterEditDrawer : PPtr[CharacterEditDrawer]
	objectsToggleHighlighter : PPtr[Highlighter]
@UTTCGen
class ButtonAudio(MonoBehaviour):
	sound : str
	variation : str
	volume : float
@UTTCGen
class CollageCameraController(MonoBehaviour):
	panSpeed : float
	panAcceleration : float
	boundMovement : bool
@UTTCGen
class HiddenImage(MonoBehaviour):
	checkChildren : bool
	spriteRenderer : PPtr[SpriteRenderer]
	fadeController : PPtr[FadeController]
@UTTCGen
class HiddenImageCompleteData(MonoBehaviour):
	fullImage : PPtr[Sprite]
	VOPath : str
	achivementToUnlock : str
	term : str
@UTTCGen
class HiddenImageCreateData(MonoBehaviour):
	hiddenImagePrefab : PPtr[HiddenImage]
	image : PPtr[Sprite]
	serializableID : str
	spawnPosition : Vector3f
	spawnRotation : Vector3f
	spawnScale : Vector3f
	specialFilter : int
	completeData : PPtr[HiddenImageCompleteData]
@UTTCGen
class SelectMapOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	term : str
	map : Map
	hiddenImagesOnMap : HiddenImages
	camera : Camera
	sceneProperties : SceneProperties
@UTTCGen
class CameraBoundsSetupHelper(MonoBehaviour):
	cameraController : PPtr[CollageCameraController]
	selectedOperation : PPtr[SelectMapOperation]
@UTTCGen
class HiddenImageAssembler(MonoBehaviour):
	fullScreenImage : PPtr[FullScreenImage]
@UTTCGen
class ScreenshotTaker(MonoBehaviour):
	pass
@UTTCGen
class CaptureButton(MonoBehaviour):
	hiddenImageAssembler : PPtr[HiddenImageAssembler]
	screenshotTaker : PPtr[ScreenshotTaker]
	screenshotButton : PPtr[object] # XXX: Fallback of PPtr<Button>
@UTTCGen
class ChangeCheckTypeCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeContinueButtonTypeCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeContinueTypeCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeDialogueEntryTextCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeDialogueIsOpenCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeFilterCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeFontSizeCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeFrameCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeFrameOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	frameSprite : PPtr[Sprite]
	term : str
@UTTCGen
class ChangePoseCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangePoseOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	pose : PPtr[AnimationClip]
	excludeForMinors : bool
@UTTCGen
class ChangeRotationCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeScaleCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeTextBorderColorCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeTextBorderColorOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
@UTTCGen
class ChangeTextColorCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeTextColorOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
@UTTCGen
class ChangeTextCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeTextFontCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeTextFontOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	font : str
@UTTCGen
class ChangeTextFontSizeCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeTextFontSizeOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	displayName : str
	fontSize : float
@UTTCGen
class ChangeTextWeightCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeTextWeightOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	displayName : str
	fontWeight : int
@UTTCGen
class ChangeWeatherCommand(MonoBehaviour):
	pass
@UTTCGen
class ChangeWeatherOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	weatherPresetName : str
	term : str
@UTTCGen
class CharacterEditSubDrawer(MonoBehaviour):
	operationsSet : PPtr[BaseOperationsSet]
	operationsPanel : PPtr[OperationsPanel]
	executeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	scrollButtons : PPtr[OperationsPanelScrollButtons]
	resetButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	removeHoldHandler : PPtr[DestructiveButtonHoldHandler]
@UTTCGen
class CheckType(MonoBehaviour):
	value__ : int
@UTTCGen
class ClearButton(MonoBehaviour):
	holdHandler : PPtr[DestructiveButtonHoldHandler]
@UTTCGen
class CollageAnswerEntriesContainer(MonoBehaviour):
	autofillOperationSet : PPtr[BaseOperationsSet]
	dialogueEntryPrefab : PPtr[CollageDialogueEntry]
	autofill : PPtr[CollageDialogueAutofill]
@UTTCGen
class MultipleToggle(MonoBehaviour):
	image : PPtr[Image]
	sprites : List[Sprite]
@UTTCGen
class CollageAnswerEntry(MonoBehaviour):
	selection : PPtr[GameObject]
	textArea : PPtr[RectTransform]
	numberText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	numberRTLText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	numberFormatString : str
	numberFormatRTLString : str
	skillFormatString : str
	skillFormatRTLString : str
	backgroundImage : PPtr[Image]
	checkToggle : PPtr[MultipleToggle]
	redCheckBackgroundColor : ColorRGBA
	whiteCheckBackgroundColor : ColorRGBA
	noCheckBackgroundColor : ColorRGBA
	checkTextColor : ColorRGBA
	noCheckTextColor : ColorRGBA
@UTTCGen
class CollageCharacter(MonoBehaviour):
	maxScale : float
	minScale : float
	scaleSensitivity : float
	gamepadDragSensitivity : float
	gamepadScaleSensitivity : float
	positionPlacementOffsetZ : float
	smoothFactor : float
	useFreePlacement : bool
	rotationSpeed : float
	content : PPtr[Transform]
	character : PPtr[Transform]
	characterNameTerm : str
	allowAllPoses : bool
	allowedPoses : List[ChangePoseOperation]
	forbiddenPoses : List[ChangePoseOperation]
	isMinor : bool
@UTTCGen
class CollageCharacterItem(MonoBehaviour):
	wearerMeshRenderer : PPtr[SkinnedMeshRenderer]
@UTTCGen
class CollageDialogueContinueButton(MonoBehaviour):
	continueButtonToggle : PPtr[MultipleToggle]
	image : PPtr[Image]
	continueButtonTerms : List[str]
@UTTCGen
class CollageDialogueEntriesContainer(MonoBehaviour):
	autofillOperationSet : PPtr[BaseOperationsSet]
	dialogueEntryPrefab : PPtr[CollageDialogueEntry]
	autofill : PPtr[CollageDialogueAutofill]
@UTTCGen
class CollageDialogueOpener(MonoBehaviour):
	dialogueToggle : PPtr[MultipleToggle]
	dialogueFeldStrip : PPtr[RectTransform]
	closedPositionX : float
	openPositionX : float
	tweenTime : float
@UTTCGen
class CollageDialogue(MonoBehaviour):
	dialogueEntriesContainer : PPtr[CollageDialogueEntriesContainer]
	answerEntriesContainer : PPtr[CollageAnswerEntriesContainer]
	continueButton : PPtr[CollageDialogueContinueButton]
	portraitParent : PPtr[CanvasGroup]
	portraitImage : PPtr[Image]
	continueTypeToggle : PPtr[MultipleToggle]
	dialogueOpener : PPtr[CollageDialogueOpener]
@UTTCGen
class CollageDialogueEntryType(MonoBehaviour):
	value__ : int
@UTTCGen
class CollageDialogueInputValidator(MonoBehaviour):
	pass
@UTTCGen
class CollageDialogueSerializer(MonoBehaviour):
	pass
@UTTCGen
class CollageElement(MonoBehaviour):
	maxScale : float
	minScale : float
	scaleSensitivity : float
	gamepadDragSensitivity : float
	gamepadScaleSensitivity : float
	positionPlacementOffsetZ : float
@UTTCGen
class CollageElementOptimizer(MonoBehaviour):
	instanceCount : int
	disableWhenMultipleInstances : List[GameObject]
@UTTCGen
class CollageText(MonoBehaviour):
	maxScale : float
	minScale : float
	scaleSensitivity : float
	gamepadDragSensitivity : float
	gamepadScaleSensitivity : float
	positionPlacementOffsetZ : float
	canvas : PPtr[Canvas]
	inputField : PPtr[object] # XXX: Fallback of PPtr<TMP_InputField>
	inputFieldLocalize : PPtr[object] # XXX: Fallback of PPtr<Localize>
	textArea : PPtr[RectTransform]
	background : PPtr[Image]
	selection : PPtr[GameObject]
@UTTCGen
class Fragment(MonoBehaviour):
	maxScale : float
	minScale : float
	scaleSensitivity : float
	gamepadDragSensitivity : float
	gamepadScaleSensitivity : float
	positionPlacementOffsetZ : float
	canvas : PPtr[Canvas]
	image : PPtr[Image]
	outlineImage : PPtr[Image]
	snapDistance : float
	selectionBorderSize : float
@UTTCGen
class Sticker(MonoBehaviour):
	maxScale : float
	minScale : float
	scaleSensitivity : float
	gamepadDragSensitivity : float
	gamepadScaleSensitivity : float
	positionPlacementOffsetZ : float
	smoothFactor : float
	canvas : PPtr[Canvas]
	image : PPtr[Image]
	outlineImage : PPtr[Image]
@UTTCGen
class CollageElementsContainer(MonoBehaviour):
	stickerPrefab : PPtr[Sticker]
	textPrefab : PPtr[CollageText]
	fragmentPrefab : PPtr[Fragment]
	collageCharacterPrefab : PPtr[CollageCharacter]
	cameraElementsParent : PPtr[Transform]
	worldElementsParent : PPtr[Transform]
@UTTCGen
class CollageElementSelection(MonoBehaviour):
	angleLimit : float
	selectionVectorThreshold : float
	selectionVectorHysteresis : float
@UTTCGen
class CollageFileManager(MonoBehaviour):
	pass
@UTTCGen
class CollageInputType(MonoBehaviour):
	value__ : int
@UTTCGen
class CollageLocation(MonoBehaviour):
	MapData : Map
	CameraData : Camera
	HiddenImagesData : HiddenImages
	OperationIdentifier : str
	SceneProperties : SceneProperties
@UTTCGen
class FilterManager(MonoBehaviour):
	pass
@UTTCGen
class Frame(MonoBehaviour):
	frameImage : PPtr[Image]
@UTTCGen
class MapManager(MonoBehaviour):
	scheduleManagers : List[AbstractScheduleManager]
@UTTCGen
class SelectFilterOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	filterName : str
	intensity : float
	displayTerm : str
@UTTCGen
class SelectTimeOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	hour : int
@UTTCGen
class TimeManager(MonoBehaviour):
	pass
@UTTCGen
class WeatherManager(MonoBehaviour):
	pass
@UTTCGen
class CollageMode(MonoBehaviour):
	collageElements : PPtr[CollageElementsContainer]
	mapManager : PPtr[MapManager]
	cameraController : PPtr[CollageCameraController]
	filterManager : PPtr[FilterManager]
	timeManager : PPtr[TimeManager]
	weatherManager : PPtr[WeatherManager]
	dialogue : PPtr[CollageDialogue]
	frame : PPtr[Frame]
	defaultMap : PPtr[SelectMapOperation]
	defaultTime : PPtr[SelectTimeOperation]
	defaultFilter : PPtr[SelectFilterOperation]
@UTTCGen
class CollageModeAdditionalGamepadInput(MonoBehaviour):
	pass
@UTTCGen
class CollageModeBundleManager(MonoBehaviour):
	pass
@UTTCGen
class CollageModeContentPolicyPopup(MonoBehaviour):
	scrollRect : PPtr[object] # XXX: Fallback of PPtr<ScrollRect>
	submitButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	cancelButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	gamepadScrollSpeed : float
@UTTCGen
class CollageModePopup(MonoBehaviour):
	text : PPtr[object] # XXX: Fallback of PPtr<Localize>
	submitButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	submitText : PPtr[object] # XXX: Fallback of PPtr<Localize>
	cancelButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	cancelText : PPtr[object] # XXX: Fallback of PPtr<Localize>
@UTTCGen
class InputLock(MonoBehaviour):
	inputLockImage : PPtr[Image]
@UTTCGen
class LoadingPanel(MonoBehaviour):
	fadeTime : float
@UTTCGen
class ScreenshotPopup(MonoBehaviour):
	text : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	openButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	changeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	closeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	canvasGroup : PPtr[CanvasGroup]
	flashImage : PPtr[Image]
	flashFadeTime : float
	fadeTime : float
	showTime : float
@UTTCGen
class CollageModeManager(MonoBehaviour):
	bottomPanel : PPtr[BottomPanel]
	captureButton : PPtr[CaptureButton]
	popup : PPtr[CollageModePopup]
	contentPolicyPopup : PPtr[CollageModeContentPolicyPopup]
	screenshotPopup : PPtr[ScreenshotPopup]
	inputLock : PPtr[InputLock]
	loadingPanel : PPtr[LoadingPanel]
@UTTCGen
class CollageModeMusic(MonoBehaviour):
	songChangeInterval : float
	songs : List[str]
@UTTCGen
class CollageModePersister(MonoBehaviour):
	pass
@UTTCGen
class CollageModeTransition(MonoBehaviour):
	pass
@UTTCGen
class CollageSaveFileTemplate(MonoBehaviour):
	screenshotResolution : Vector2f
@UTTCGen
class CollageSaveData(MonoBehaviour):
	Screenshot : PPtr[Texture2D]
	FileName : str
	SaveData : CollageSaveFileTemplate
@UTTCGen
class CollageSaveFolderAccessor(MonoBehaviour):
	pass
@UTTCGen
class OperationsSetCatalogue(MonoBehaviour):
	allOperationsSet : List[OperationsSetElement]
@UTTCGen
class CollageSerializer(MonoBehaviour):
	operationsSets : PPtr[OperationsSetCatalogue]
	debugSaveInputField : PPtr[object] # XXX: Fallback of PPtr<TMP_InputField>
	testString : str
@UTTCGen
class CollageTextSubDrawer(MonoBehaviour):
	operationsSet : PPtr[BaseOperationsSet]
	operationsPanel : PPtr[OperationsPanel]
	executeButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	scrollButtons : PPtr[OperationsPanelScrollButtons]
	placeTextButtonText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	openDialogueButtonText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class ColorConverter(MonoBehaviour):
	pass
@UTTCGen
class ColorOperationButton(MonoBehaviour):
	highlight : PPtr[Image]
	selection : PPtr[Image]
	image : PPtr[Image]
@UTTCGen
class Operation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
@UTTCGen
class OperationsSet(MonoBehaviour):
	operations : List[Operation]
@UTTCGen
class ColorOperationsPanel(MonoBehaviour):
	operationsSet : PPtr[OperationsSet]
	operationButtonPrefab : PPtr[BaseOperationButton]
	parent : PPtr[Transform]
@UTTCGen
class Command(MonoBehaviour):
	pass
@UTTCGen
class CommandDispatcher(MonoBehaviour):
	pass
@UTTCGen
class ContinueType(MonoBehaviour):
	value__ : int
@UTTCGen
class DialogueAutofillNavigationInputHandler(MonoBehaviour):
	inputType : int
@UTTCGen
class DialogueNavigationInputHandler(MonoBehaviour):
	inputType : int
@UTTCGen
class DistanceUnlocker(MonoBehaviour):
	distanceToUnlock : float
	maxFadeOutDistance : float
@UTTCGen
class DragAction(MonoBehaviour):
	pass
@UTTCGen
class DragInput(MonoBehaviour):
	pass
@UTTCGen
class DrawerManager(MonoBehaviour):
	pass
@UTTCGen
class DrawerTabInputHandler(MonoBehaviour):
	toggles : List[PPtr[object]]
@UTTCGen
class SubDrawer(MonoBehaviour):
	pass
@UTTCGen
class SubDrawerTogglePair(MonoBehaviour):
	SubDrawer : PPtr[SubDrawer]
	Toggle : PPtr[object] # XXX: Fallback of PPtr<Toggle>
@UTTCGen
class EffectsDrawer(MonoBehaviour):
	tweenTime : float
	tweenDelay : float
	titleTerm : str
	filtersSubDrawerTogglePair : SubDrawerTogglePair
	framesSubDrawerTogglePair : SubDrawerTogglePair
@UTTCGen
class EnableOnEnable(MonoBehaviour):
	target : PPtr[GameObject]
@UTTCGen
class EnableOnInputType(MonoBehaviour):
	inputType : int
	target : PPtr[GameObject]
@UTTCGen
class ExtendedSlider(MonoBehaviour):
	m_Navigation : object # XXX: Fallback of Navigation
	m_Transition : int
	m_Colors : object # XXX: Fallback of ColorBlock
	m_SpriteState : object # XXX: Fallback of SpriteState
	m_AnimationTriggers : object # XXX: Fallback of AnimationTriggers
	m_Interactable : bool
	m_TargetGraphic : PPtr[object] # XXX: Fallback of PPtr<Graphic>
	m_FillRect : PPtr[RectTransform]
	m_HandleRect : PPtr[RectTransform]
	m_Direction : int
	m_MinValue : float
	m_MaxValue : float
	m_WholeNumbers : bool
	m_Value : float
	m_OnValueChanged : object # XXX: Fallback of SliderEvent
@UTTCGen
class FragmentsCluster(MonoBehaviour):
	pass
@UTTCGen
class GDKNativeKeyboardEnabler(MonoBehaviour):
	pass
@UTTCGen
class HiddenImageFragmentData(MonoBehaviour):
	FragmentName : str
	SnappingPieces : List[str]
	SnapOffset : Vector2f
	fullImageData : PPtr[HiddenImageCompleteData]
@UTTCGen
class HideOnScreenshot(MonoBehaviour):
	pass
@UTTCGen
class HoldHandlerPerformedAudio(MonoBehaviour):
	sound : str
	variation : str
	volume : float
@UTTCGen
class HoldHandlerStartedAudio(MonoBehaviour):
	sound : str
	variation : str
	volume : float
@UTTCGen
class INavigationReceiver(MonoBehaviour):
	pass
@UTTCGen
class InputFieldAudio(MonoBehaviour):
	sound : str
	variation : str
	volume : float
@UTTCGen
class InputFieldEditingChecker(MonoBehaviour):
	pass
@UTTCGen
class ISerializableManager(MonoBehaviour):
	pass
@UTTCGen
class ListComposite_1(MonoBehaviour):
	pass
@UTTCGen
class LMBDragAction(MonoBehaviour):
	pass
@UTTCGen
class MouseGamepadPromptSwitcher(MonoBehaviour):
	mousePrompt : PPtr[GameObject]
	gamepadPrompt : PPtr[GameObject]
@UTTCGen
class MoveCollageElementCommand(MonoBehaviour):
	pass
@UTTCGen
class MultipleToggleAudio(MonoBehaviour):
	sound : str
	variation : str
	volume : float
@UTTCGen
class NavigationInputHandler(MonoBehaviour):
	inputType : int
@UTTCGen
class ObjectsDrawer(MonoBehaviour):
	tweenTime : float
	tweenDelay : float
	titleTerm : str
	charactersSubDrawerTogglePair : SubDrawerTogglePair
	stickersSubDrawerTogglePair : SubDrawerTogglePair
	textSubDrawerTogglePair : SubDrawerTogglePair
	fragmentsSubDrawerTogglePair : SubDrawerTogglePair
	fragmentsTabHighlighter : PPtr[Highlighter]
	fragmentsTabObjectsToHide : List[GameObject]
@UTTCGen
class OpenDialogueOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
@UTTCGen
class OperationButton(MonoBehaviour):
	highlight : PPtr[Image]
	selection : PPtr[Image]
	favouriteButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	favouriteImage : PPtr[Image]
	image : PPtr[Image]
	debugNameText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class OperationSelector(MonoBehaviour):
	operationsSet : PPtr[OperationsSet]
	previousButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	nextButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	previewImage : PPtr[Image]
	previewText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
@UTTCGen
class OperationsNavigationInputHandler(MonoBehaviour):
	inputType : int
@UTTCGen
class OperationsSetComposite(MonoBehaviour):
	operationsSets : List[OperationsSet]
@UTTCGen
class OperationsType(MonoBehaviour):
	value__ : int
@UTTCGen
class Outline(MonoBehaviour):
	pass
@UTTCGen
class PlaceCharacterOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	characterPrefab : PPtr[CollageCharacter]
	placementSpecificTerm : str
@UTTCGen
class PlaceCollageElementCommand(MonoBehaviour):
	pass
@UTTCGen
class PlaceFragmentOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	hiddenImageData : PPtr[HiddenImageCreateData]
	spriteScale : float
	term : str
	fragmentsToSnapTo : List[HiddenImageCreateData]
	snapCenterOffset : Vector2f
@UTTCGen
class PlaceStickerOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	stickerSprite : PPtr[Sprite]
	spriteScale : float
	term : str
	nameArgument : str
@UTTCGen
class PlaceTextOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	backgroundColor : ColorRGBA
	backgroundSprite : PPtr[Sprite]
	font : str
	fontSize : int
	textPadding : Padding
@UTTCGen
class PlaceTextOperationButton(MonoBehaviour):
	highlight : PPtr[Image]
	selection : PPtr[Image]
	text : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	textLocalize : PPtr[object] # XXX: Fallback of PPtr<Localize>
	background : PPtr[Image]
@UTTCGen
class PointerUIHelper(MonoBehaviour):
	pass
@UTTCGen
class ProfanityFilter(MonoBehaviour):
	swearWordsTextAssets : List[TextAsset]
@UTTCGen
class ProfanityWords(MonoBehaviour):
	Words : List[str]
@UTTCGen
class RedoButton(MonoBehaviour):
	pass
@UTTCGen
class RemoveButton(MonoBehaviour):
	pass
@UTTCGen
class RemoveCollageElementCommand(MonoBehaviour):
	pass
@UTTCGen
class RemoveDialogueEntryCommand(MonoBehaviour):
	pass
@UTTCGen
class ResetScaleButton(MonoBehaviour):
	pass
@UTTCGen
class RMBDragAction(MonoBehaviour):
	pass
@UTTCGen
class SaveButton(MonoBehaviour):
	selection : PPtr[Image]
	image : PPtr[object] # XXX: Fallback of PPtr<RawImage>
@UTTCGen
class SavesDrawer(MonoBehaviour):
	tweenTime : float
	tweenDelay : float
	title : str
	subdrawer : PPtr[SavesSubdrawer]
@UTTCGen
class SavesPanel(MonoBehaviour):
	savesButtonPrefab : PPtr[SaveButton]
	buttonsParent : PPtr[Transform]
	specialButtonsParent : PPtr[Transform]
	scrollRect : PPtr[object] # XXX: Fallback of PPtr<ScrollRect>
	gamepadScrollSpeed : float
@UTTCGen
class SelectCommand(MonoBehaviour):
	pass
@UTTCGen
class SelectedOperationTooltipUpdater(MonoBehaviour):
	operationsPanel : PPtr[OperationsPanel]
	defaultTooltipText : PPtr[object] # XXX: Fallback of PPtr<Localize>
	selectedTooltipText : PPtr[object] # XXX: Fallback of PPtr<Localize>
@UTTCGen
class SelectionMode(MonoBehaviour):
	value__ : int
@UTTCGen
class SelectMapCommand(MonoBehaviour):
	pass
@UTTCGen
class SelectTimeCommand(MonoBehaviour):
	pass
@UTTCGen
class SerializableData(MonoBehaviour):
	pass
@UTTCGen
class SettingDrawer(MonoBehaviour):
	tweenTime : float
	tweenDelay : float
	title : str
	locationSubDrawerTogglePair : SubDrawerTogglePair
	weatherSubDrawerTogglePair : SubDrawerTogglePair
	timeOfDaySubDrawerTogglePair : SubDrawerTogglePair
@UTTCGen
class SimpleOperationButton(MonoBehaviour):
	highlight : PPtr[Image]
	selection : PPtr[Image]
	favouriteButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	favouriteImage : PPtr[Image]
	image : PPtr[Image]
	debugNameText : PPtr[object] # XXX: Fallback of PPtr<TextMeshProUGUI>
	operation : PPtr[Operation]
@UTTCGen
class SingularSerializableData(MonoBehaviour):
	Identifier : str
@UTTCGen
class SkillOperation(MonoBehaviour):
	previewSprite : PPtr[Sprite]
	color : ColorRGBA
	characterNameTerm : str
@UTTCGen
class SpecialFilter(MonoBehaviour):
	value__ : int
@UTTCGen
class SpecialSaveButton(MonoBehaviour):
	selection : PPtr[Image]
	image : PPtr[object] # XXX: Fallback of PPtr<RawImage>
	enabledButtonColor : ColorRGBA
	disabledButtonColor : ColorRGBA
	confirmButton : PPtr[object] # XXX: Fallback of PPtr<Button>
	standardButtons : List[PPtr[object]]
@UTTCGen
class StringHelper(MonoBehaviour):
	pass
@UTTCGen
class SubdrawerTabInputHandler(MonoBehaviour):
	subdrawerTabToggles : List[PPtr[object]]
@UTTCGen
class ToggleAudio(MonoBehaviour):
	sound : str
	variation : str
	volume : float
@UTTCGen
class ToggleChangeColor(MonoBehaviour):
	graphic : PPtr[object] # XXX: Fallback of PPtr<Graphic>
	colorOn : ColorRGBA
	colorOff : ColorRGBA
@UTTCGen
class ToggleChangeSprite(MonoBehaviour):
	image : PPtr[Image]
	spriteOn : PPtr[Sprite]
	spriteOff : PPtr[Sprite]
@UTTCGen
class ToggleSetActive(MonoBehaviour):
	gameObjectOn : PPtr[GameObject]
	gameObjectOff : PPtr[GameObject]
@UTTCGen
class TwoAxisDragAction(MonoBehaviour):
	pass
@UTTCGen
class UIAudio(MonoBehaviour):
	sound : str
	variation : str
	volume : float
@UTTCGen
class UISelectionListHelper(MonoBehaviour):
	pass
@UTTCGen
class UndoButton(MonoBehaviour):
	pass
@UTTCGen
class ZoomToAlphaChanger(MonoBehaviour):
	fadeController : PPtr[FadeController]
	minimalAlpha : float
	maxVisibleZoomDifference : float
	hiddenImage : PPtr[HiddenImage]
@UTTCGen
class UnlockHiddenImage(MonoBehaviour):
	hiddenImage : PPtr[HiddenImage]
	zoomToAlphaChanger : PPtr[ZoomToAlphaChanger]
	distanceChecker : PPtr[DistanceUnlocker]
	minimumUnlockAlfaValue : float
	maximumUnlockAlfaValue : float
@UTTCGen
class Vector2Converter(MonoBehaviour):
	pass
@UTTCGen
class Vector3Converter(MonoBehaviour):
	pass
